# ratos-klipper.yaml
name: ratos-klipper
mmdebstrap:
  variant: apt
  packages: []
  customize-hooks:
    # --- In-chroot: user-scoped work (pass username as $1 to inner shell)
    - |-
      chroot "$1" /bin/sh -eu -c '
        U="$1"
        H="/home/$1"
        ENV_DIR="$H/klippy-env"

        # Clone Kalico (bleeding-edge-v2) as the device user
        runuser -u "$U" -- git clone --depth 1 --branch bleeding-edge-v2 https://github.com/KalicoCrew/kalico "$H/klipper"

        # Create printer_data tree as the user
        runuser -u "$U" -- sh -eu -c "install -d \"$H/printer_data\" \"$H/printer_data/config\" \"$H/printer_data/comms\" \"$H/printer_data/logs\" \"$H/printer_data/systemd\""

        # Ensure python present & create venv
        test -x /usr/bin/python3
        runuser -u "$U" -- /usr/bin/python3 -m venv "$ENV_DIR"
        runuser -u "$U" -- "$ENV_DIR/bin/pip" install --upgrade pip setuptools wheel
        runuser -u "$U" -- "$ENV_DIR/bin/pip" install -r "$H/klipper/scripts/klippy-requirements.txt"
        runuser -u "$U" -- "$ENV_DIR/bin/pip" install numpy

        # Pre-compile klippy to warm caches
        runuser -u "$U" -- "$ENV_DIR/bin/python" -m compileall "$H/klipper/klippy"
        runuser -u "$U" -- "$ENV_DIR/bin/python" "$H/klipper/klippy/chelper/__init__.py"
      ' -- "$KSconf_device_user1"

    # --- Host-side: copy unit/env from templates, then enable units (single step)
    - |-
      install -d -m 0755 "$1/etc/systemd/system"
      install -m 0644 "$KS_TEMPLATES/klipper/klipper.service" "$1/etc/systemd/system/klipper.service"

      install -d -m 0755 "$1/home/$KSconf_device_user1/printer_data/systemd"
      install -m 0644 "$KS_TEMPLATES/klipper/klipper.env" "$1/home/$KSconf_device_user1/printer_data/systemd/klipper.env"

      "$KS_HELPERS/enable-units" "$1" klipper
