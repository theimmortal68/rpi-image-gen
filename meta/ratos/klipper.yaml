# ratos-klipper.yaml
name: ratos-klipper
mmdebstrap:
  variant: apt
  packages: []
  customize-hooks:
    - |-
      chroot "$1" /bin/sh -eu -c '
        U="$IGconf_device_user1"
        H="/home/$IGconf_device_user1"
        ENV_DIR="$H/klippy-env"

        # Clone Kalico (bleeding-edge-v2) as user
        runuser -u "$U" -- git clone --depth 1 --branch bleeding-edge-v2 https://github.com/KalicoCrew/kalico "$H/klipper"

        # Create printer_data tree as user
        runuser -u "$U" -- sh -eu -c "install -d \"$H/printer_data\" \"$H/printer_data/config\" \"$H/printer_data/comms\" \"$H/printer_data/logs\" \"$H/printer_data/systemd\""

        # Ensure python present & create venv
        test -x /usr/bin/python3
        runuser -u "$U" -- /usr/bin/python3 -m venv "$ENV_DIR"
        runuser -u "$U" -- "$ENV_DIR/bin/pip" install --upgrade pip setuptools wheel
        runuser -u "$U" -- "$ENV_DIR/bin/pip" install -r "$H/klipper/scripts/klippy-requirements.txt"
        runuser -u "$U" -- "$ENV_DIR/bin/pip" install numpy

        # Drop service + env via templates
        install -d -m 0755 /etc/systemd/system
        install -m 0644 "$RPI_TEMPLATES/klipper/klipper.service" /etc/systemd/system/klipper.service

        # Put klipper.env in user's tree as user (avoid chown)
        runuser -u "$U" -- sh -eu -c "install -D -m 0644 \"$RPI_TEMPLATES/klipper/klipper.env\" \"$H/printer_data/systemd/klipper.env\""

        # Pre-compile klippy to warm caches
        runuser -u "$U" -- "$ENV_DIR/bin/python" -m compileall "$H/klipper/klippy"
        runuser -u "$U" -- "$ENV_DIR/bin/python" "$H/klipper/klippy/chelper/__init__.py"
      '
    - '"$BDEBSTRAP_HOOKS/enable-units" "$1" klipper'
